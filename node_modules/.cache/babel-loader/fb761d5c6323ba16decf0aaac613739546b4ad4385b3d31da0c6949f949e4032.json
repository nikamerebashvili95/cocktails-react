{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Qeto\\\\Desktop\\\\cocktails\\\\src\\\\context.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = \"https://www.thecocktaildb.com/api/json/v1/1/search.php?s=\";\nconst AppContext = /*#__PURE__*/React.createContext();\nconst AppProvider = ({\n  children\n}) => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState(\"a\");\n  const [cocktails, setCocktails] = useState([]);\n  const fetchDrinks = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch(`${url}${searchTerm}`);\n      const data = await response.json();\n      const {\n        drinks\n      } = data;\n      if (drinks) {\n        const newCocktails = drinks.map(item => {\n          const {\n            idDrink,\n            strDrink,\n            strDrinkThumb,\n            strAlcoholic,\n            strGlass\n          } = item;\n          return {\n            id: idDrink,\n            name: strDrink,\n            image: strDrinkThumb,\n            info: strAlcoholic,\n            glass: strGlass\n          };\n        });\n        setCocktails(newCocktails);\n      } else {\n        setCocktails([]);\n      }\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchDrinks();\n  }, [searchTerm]);\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      loading,\n      cocktails,\n      setSearchTerm\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n// make sure use\n_s(AppProvider, \"jlf7qQkZpMCKe7R85eG6k+XajV8=\");\n_c = AppProvider;\nexport const useGlobalContext = () => {\n  _s2();\n  return useContext(AppContext);\n};\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport { AppContext, AppProvider };\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","useState","useContext","useEffect","useCallback","jsxDEV","_jsxDEV","url","AppContext","createContext","AppProvider","children","_s","loading","setLoading","searchTerm","setSearchTerm","cocktails","setCocktails","fetchDrinks","response","fetch","data","json","drinks","newCocktails","map","item","idDrink","strDrink","strDrinkThumb","strAlcoholic","strGlass","id","name","image","info","glass","error","console","log","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useGlobalContext","_s2","$RefreshReg$"],"sources":["C:/Users/Qeto/Desktop/cocktails/src/context.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport { useCallback } from \"react\";\n\nconst url = \"https://www.thecocktaildb.com/api/json/v1/1/search.php?s=\";\nconst AppContext = React.createContext();\n\nconst AppProvider = ({ children }) => {\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState(\"a\");\n  const [cocktails, setCocktails] = useState([]);\n\n  const fetchDrinks = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch(`${url}${searchTerm}`);\n      const data = await response.json();\n      const { drinks } = data;\n      if (drinks) {\n        const newCocktails = drinks.map((item) => {\n          const { idDrink, strDrink, strDrinkThumb, strAlcoholic, strGlass } =\n            item;\n          return {\n            id: idDrink,\n            name: strDrink,\n            image: strDrinkThumb,\n            info: strAlcoholic,\n            glass: strGlass,\n          };\n        });\n        setCocktails(newCocktails);\n      } else {\n        setCocktails([]);\n      }\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchDrinks();\n  }, [searchTerm]);\n  return (\n    <AppContext.Provider value={{ loading, cocktails, setSearchTerm }}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n// make sure use\nexport const useGlobalContext = () => {\n  return useContext(AppContext);\n};\n\nexport { AppContext, AppProvider };\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC9D,SAASC,WAAW,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,GAAG,GAAG,2DAA2D;AACvE,MAAMC,UAAU,gBAAGR,KAAK,CAACS,aAAa,CAAC,CAAC;AAExC,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACpC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,GAAG,CAAC;EACjD,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMkB,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACFL,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEd,GAAI,GAAEQ,UAAW,EAAC,CAAC;MACnD,MAAMO,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClC,MAAM;QAAEC;MAAO,CAAC,GAAGF,IAAI;MACvB,IAAIE,MAAM,EAAE;QACV,MAAMC,YAAY,GAAGD,MAAM,CAACE,GAAG,CAAEC,IAAI,IAAK;UACxC,MAAM;YAAEC,OAAO;YAAEC,QAAQ;YAAEC,aAAa;YAAEC,YAAY;YAAEC;UAAS,CAAC,GAChEL,IAAI;UACN,OAAO;YACLM,EAAE,EAAEL,OAAO;YACXM,IAAI,EAAEL,QAAQ;YACdM,KAAK,EAAEL,aAAa;YACpBM,IAAI,EAAEL,YAAY;YAClBM,KAAK,EAAEL;UACT,CAAC;QACH,CAAC,CAAC;QACFd,YAAY,CAACO,YAAY,CAAC;MAC5B,CAAC,MAAM;QACLP,YAAY,CAAC,EAAE,CAAC;MAClB;MACAJ,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,OAAOwB,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClBxB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EACDX,SAAS,CAAC,MAAM;IACdgB,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACJ,UAAU,CAAC,CAAC;EAChB,oBACET,OAAA,CAACE,UAAU,CAACiC,QAAQ;IAACC,KAAK,EAAE;MAAE7B,OAAO;MAAEI,SAAS;MAAED;IAAc,CAAE;IAAAL,QAAA,EAC/DA;EAAQ;IAAAgC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAE1B,CAAC;AACD;AAAAlC,EAAA,CA1CMF,WAAW;AAAAqC,EAAA,GAAXrC,WAAW;AA2CjB,OAAO,MAAMsC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACpC,OAAO/C,UAAU,CAACM,UAAU,CAAC;AAC/B,CAAC;AAACyC,GAAA,CAFWD,gBAAgB;AAI7B,SAASxC,UAAU,EAAEE,WAAW;AAAG,IAAAqC,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}